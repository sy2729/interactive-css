{"version":3,"sources":["components/course/CSSEditor.js","components/course/HTMLEditor.js","components/course/Codes.js"],"names":["MyEditor","props","_this","Object","_Users_shuaiyuan_Desktop_code_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_shuaiyuan_Desktop_code_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_shuaiyuan_Desktop_code_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","setState","code","styleData","valueChanged","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_simple_code_editor__WEBPACK_IMPORTED_MODULE_6___default","placeholder","value","onValueChange","highlight","languages","css","padding","style","fontFamily","fontSize","React","Component","htmlData","hljs","registerLanguage","Codes","_Users_shuaiyuan_Desktop_code_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_shuaiyuan_Desktop_code_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_shuaiyuan_Desktop_code_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","editorTypeState","highLight","mode","highlightBlock","refs","codes","newMode","switchMode","messageText","message","info","CodeWatchContainer","react__WEBPACK_IMPORTED_MODULE_6___default","className","ref","minHeight","Editor","_CSSEditor__WEBPACK_IMPORTED_MODULE_13__","e","_HTMLEditor__WEBPACK_IMPORTED_MODULE_14__","LanguagePanel","width","zIndex","concat","onClick","Button","bind","antd__WEBPACK_IMPORTED_MODULE_8__","type","baseButton","boxShadow","styled","div","_templateObject"],"mappings":"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","file":"static/js/10.e8c115cb.chunk.js","sourcesContent":["import React from 'react';\n// import {Editor, EditorState} from 'draft-js';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-css';\nimport \"prismjs/themes/prism.css\";\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    // this.state = {\n    //   editorState: EditorState.createEmpty(),\n    // };\n    // this.onChange = (editorState) => {\n    //   console.log(editorState.target.value)\n    //   this.setState({editorState})\n    // };\n  }\n\n  componentWillMount(){\n    this.setState({\n      code: this.props.styleData\n    })\n  }\n\n  valueChanged(code){\n    this.setState({ code })\n    this.props.valueChanged(code)\n  }\n\n  render() {\n    return (\n      <Editor\n        placeholder=\"Type some code…\"\n        value={this.state.code}\n        onValueChange={code => this.valueChanged(code)}\n        highlight={code => highlight(code, languages.css, 'css')}\n        padding={30}\n        style={{\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12,\n        }}\n      />\n    );\n  }\n}\n\nexport default MyEditor;","import React from 'react';\n// import {Editor, EditorState} from 'draft-js';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-css';\nimport \"prismjs/themes/prism.css\";\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    // this.state = {\n    //   editorState: EditorState.createEmpty(),\n    // };\n    // this.onChange = (editorState) => {\n    //   console.log(editorState.target.value)\n    //   this.setState({editorState})\n    // };\n  }\n\n  componentWillMount(){\n    this.setState({\n      code: this.props.htmlData\n    })\n  }\n\n  valueChanged(code){\n    this.setState({ code })\n    this.props.valueChanged(code)\n  }\n\n  render() {\n    return (\n      <Editor\n        placeholder=\"Type some code…\"\n        value={this.state.code}\n        onValueChange={code => this.valueChanged(code)}\n        highlight={code => highlight(code, languages.css, 'css')}\n        padding={30}\n        style={{\n          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n          fontSize: 12,\n        }}\n      />\n    );\n  }\n}\n\nexport default MyEditor;","import React, { Component } from 'react';\nimport { message,  Icon } from 'antd';\nimport styled from 'styled-components';\nimport hljs from 'highlight.js';\nimport css from 'highlight.js/lib/languages/css';\nimport html from 'highlight.js/lib/languages/css';\nimport 'highlight.js/styles/atom-one-dark.css';\nimport CSSEditor from './CSSEditor';\nimport HTMLEditor from './HTMLEditor';\n\nimport {baseButton} from '../style-components';\n\nhljs.registerLanguage('css', css);\n\nclass Codes extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      editorTypeState: 'css'\n    }\n  }\n  \n  componentDidMount(){\n    this.highLight();\n  }\n\n  componentDidUpdate(){\n    this.highLight();\n  }\n\n  highLight(){\n    if(this.props.mode === 'watch') {\n      hljs.highlightBlock(this.refs.codes)\n    }\n  }\n\n  switchMode(){\n    let newMode = this.props.mode === 'watch'  ? 'edit' : 'watch';\n    this.props.switchMode(newMode)\n    let messageText = this.props.mode === 'watch' ? \n    \"Now in the Edit Mode,  Do some hands-on coding!\" :\n    \"Now in the Watch Mode,  Enjoy the interactivity!\"\n    message.info(messageText);\n  }\n\n  render() {\n    const CodeWatchContainer = this.state.editorTypeState === 'css'  ? \n      <pre>\n        <code className='css' ref='codes' style={{minHeight: '50vh',  padding: '30px'}}>\n          {this.props.styleData}\n        </code>\n      </pre> :\n      <pre>\n        <code className='html' ref='codes' style={{minHeight: '50vh',  padding: '30px'}}>\n          {this.props.htmlData}\n        </code>\n      </pre>;\n    const Editor = this.state.editorTypeState === 'css'  ? \n        <CSSEditor \n        valueChanged={(e)=>this.props.valueChanged(e, 'css')}\n        ref='codes'\n        styleData={this.props.styleData}/> :\n        <HTMLEditor\n        valueChanged={(e)=>this.props.valueChanged(e, 'html')}\n        ref='codes'\n        htmlData={this.props.htmlData} />\n    return (\n      <div className=\"h-50 t-left relative over-auto\">\n        <LanguagePanel\n          style={{padding: '3px 0 0 3px', width: '100px', zIndex: 2}} \n          className={`absolute flex justify-space-around ${this.props.mode === 'watch' ? \"white\" : \"gray\"}`}>\n          <p  \n           onClick={()=>this.setState({editorTypeState: 'html'})}\n           className={`pointer ${this.state.editorTypeState ===  'html' ? 'active' : ''}`}\n           >HTML</p>\n          <p> | </p>\n          <p \n           onClick={()=>this.setState({editorTypeState: 'css'})}\n           className={`pointer ${this.state.editorTypeState ===  'html' ? '' : 'active'}`}\n           >CSS</p>\n        </LanguagePanel>\n        <Button\n          style={{zIndex: 2}}\n          className=\"absolute right-1 top-1 pointer\"\n          onClick={this.switchMode.bind(this)}\n          >{this.props.mode ===  'watch'  ? 'Edit the code' : 'Watch the code'} {' '}\n            <Icon type=\"setting\" />\n          </Button>\n        { this.props.mode === 'watch' ?\n           CodeWatchContainer\n           :\n           Editor\n        }\n      </div>\n    )\n  }\n}\n\nconst Button = baseButton([5, 10, 5,  10], 130, {boxShadow: 'none'});\nconst LanguagePanel = styled.div`\n  &.white {\n    p {\n      color: gray;\n    }\n    p.active {\n      color: inherit;\n    }\n  }\n\n  &.gray {\n    p.active {\n      color: #30373F;\n    }\n  }\n`\n\nexport default Codes\n\n/**\n * \n * \n * \n */"],"sourceRoot":""}